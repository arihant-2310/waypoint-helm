{{- if (eq (.Values.server.enabled | toString) "true") }}
# StatefulSet to run the Waypoint server.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "waypoint.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "waypoint.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  {{- template "waypoint.statefulSet.annotations" . }}
spec:
  serviceName: {{ template "waypoint.fullname" . }}-internal
  podManagementPolicy: Parallel
  replicas: 1 # Waypoint doesn't support horizontal scaling today
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "waypoint.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: server
  template:
    metadata:
      labels:
        helm.sh/chart: {{ template "waypoint.chart" . }}
        app.kubernetes.io/name: {{ template "waypoint.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: server
        {{- if  .Values.server.extraLabels -}}
          {{- toYaml .Values.server.extraLabels | nindent 8 -}}
        {{- end -}}
      {{ template "waypoint.annotations" . }}
    spec:
      {{- if .Values.server.priorityClassName }}
      priorityClassName: {{ .Values.server.priorityClassName }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ template "waypoint.serviceAccount.name" . }}
      volumes:
        {{ template "waypoint.volumes" . }}
        - name: home
          emptyDir: {}
      containers:
        - name: waypoint
          {{ template "waypoint.resources" . }}
          image: {{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default "latest" }}
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          command:
          - "waypoint"
          args:
          - "server"
          - "run"
          - "-accept-tos"
          - "-vvv"
          - "-db=/data/data.db"
          - "-listen-grpc=0.0.0.0:9701"
          - "-listen-http=0.0.0.0:9702"
          env:
            - name: HOME
              value: /data
          volumeMounts:
            - name: data-{{ .Release.Namespace }}
              mountPath: /data
            - name: home
              mountPath: /home/vault
          ports:
            - containerPort: 9701
              name: grpc
            - containerPort: 9702
              name: http
          livenessProbe:
            httpGet:
              path: "/"
              port: http
              scheme: https
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: data-{{ .Release.Namespace }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.server.storage.size }}
        {{- if .Values.server.storage.storageClass }}
        storageClassName: {{ .Values.server.storage.storageClass }}
        {{- end }}
{{ end }}
